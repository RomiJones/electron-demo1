// hello.cc
#include <node.h>
#ifdef WIN32
#include <windows.h>
#endif
namespace demo {

	using v8::FunctionCallbackInfo;
	using v8::Isolate;
	using v8::Local;
	using v8::Object;
	using v8::String;
	using v8::Value;
	using v8::Number;

	void Method_f1(const FunctionCallbackInfo<Value>& args) {
#ifdef WIN32
		::MessageBox(NULL, L"调用本地api", L"测试123", 0);
#endif
		Isolate* isolate = args.GetIsolate();
		args.GetReturnValue().Set(String::NewFromUtf8(isolate, "niubi test string"));
	}

#ifdef WIN32
	void Method_getCurrentProcessId(const FunctionCallbackInfo<Value>& args) {
		DWORD processId = GetCurrentProcessId();
		Isolate* isolate = args.GetIsolate();
		args.GetReturnValue().Set(Number::New(isolate, processId));
	}
#endif

	void init(Local<Object> exports) {
		NODE_SET_METHOD(exports, "f1", Method_f1);
#ifdef WIN32
		NODE_SET_METHOD(exports, "getCurrentProcessId", Method_getCurrentProcessId);
#endif
	}

	NODE_MODULE(hello, init)

}  // namespace demo

